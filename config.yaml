# Main Application Configuration
application:
  environment: "development"  # options: development, production, testing, staging
  database_type: "postgres"   # options: postgres, mongodb, inmemory
  server_type: "gin"
  allowed_roles:
    - "SuperUser"
    - "Admin"
    - "Moderator"
    - "User"
    - "Guest"

# Server Configuration (Common across environments)
server:
  host: "localhost"
  port: 9090
  use_tls: true

# Server Configuration (Common across environments)
smtp_email:
  host: "smtp.gmail.com"
  port: "587"
  username: "priyacomputerclasses22@gmail.com"
  password: "plakicniborjpckj"


# Token Configuration (Common across environments)
token:
  type: "jwt"  # options: jwt, paseto
  symmetric_key: "qwertyuiopasdfghjklzxcvbnmqwerty"
  access_duration: "15m"
  base_cookie_name: "UserEventureAuthorisationToken"
  secure_cookie_https: false # Set to true if using HTTPS in production

# Logging Configuration (Common across environments)
logging:
  level: "info"  # options: debug, info, warn, error

# otp
otp:
  access_duration: "60m"

# Database Configuration (Common)
database:
  postgres:
    url: "postgresql://postgres:EventifyGoSecret@localhost:5432/EventifyGo"
  mongodb:
    uri: "mongodb://localhost:27017/"
  inmemory: {}

# Environment-Specific Overrides
environments:
  development:
    database:
      postgres:
        url: "postgresql://postgres:EventifyGoSecret@localhost:5432/EventifyGo"
      mongodb:
        uri: "mongodb://localhost:27017/dev"
    cors:
      allowed_origins: "http://localhost:3000"
      allowed_methods: [GET, POST, PUT, DELETE]
      allowed_headers: [Origin, Content-Type, Authorization]
      exposed_headers: [Content-Length, Content-Range]
      allow_credentials: true
    cert_file: "ssl/dev_server.crt"
    key_file: "ssl/dev_server.pem"

  testing:
    database:
      postgres:
        url: "postgresql://postgres:EventifyGoSecret@localhost:5432/EventifyGo_test"
      mongodb:
        uri: "mongodb://localhost:27017/test"
    cors:
      allowed_origins: "http://localhost:3000"
      allowed_methods: [GET, POST, PUT, DELETE]
      allowed_headers: [Origin, Content-Type, Authorization]
      exposed_headers: [Content-Length, Content-Range]
      allow_credentials: true
    cert_file: "ssl/test_server.crt"
    key_file: "ssl/test_server.pem"

  production:
    database:
      postgres:
        url: "postgresql://postgres:EventifyGoSecret@localhost:5432/EventifyGo_prod"
      mongodb:
        uri: "mongodb://localhost:27017/prod"
    cors:
      allowed_origins: "https://myproductionapp.com"
      allowed_methods: [GET, POST]
      allowed_headers: [Origin, Content-Type, Authorization]
      exposed_headers: [Content-Length, Content-Range]
      allow_credentials: true
    cert_file: "ssl/prod_server.crt"
    key_file: "ssl/prod_server.pem"

  staging:
    database:
      postgres:
        url: "postgresql://postgres:EventifyGoSecret@localhost:5432/EventifyGo_staging"
      mongodb:
        uri: "mongodb://localhost:27017/staging"
    cors:
      allowed_origins: "https://myproductionapp.com"
      allowed_methods: [GET, POST]
      allowed_headers: [Origin, Content-Type, Authorization]
      exposed_headers: [Content-Length, Content-Range]
      allow_credentials: true
    cert_file: "ssl/staging_server.crt"
    key_file: "ssl/staging_server.pem"

# Dynamic Selection (Evaluated at runtime)
active_configuration:
  database: "@application.database_type"
  environment: "@application.environment"
